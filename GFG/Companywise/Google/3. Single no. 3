//https://leetcode.com/problems/single-number-iii/

class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int n = nums.size();
        vector <int> r;
        if(n == 0) return r;
        if(n == 2 && nums[0] != nums[1]) return nums; 
        int m = 0;
        for(int i = 0; i < n; i++) {
            m ^= nums[i];
        }
        m = m & ~(m - 1);
        int f = 0;
        int s = 0;
        for(int i = 0; i < n; i++) {
            if((nums[i]&m) == 0) {
                f ^= nums[i];
            } else {
                s ^= nums[i];
            }
        }
        r.push_back(f);
        r.push_back(s);
        return r;
    }
};
