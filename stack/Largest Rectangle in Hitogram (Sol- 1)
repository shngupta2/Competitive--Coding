//Question https://www.interviewbit.com/problems/largest-rectangle-in-histogram/

int Solution::largestRectangleArea(vector<int> &A) {
    int n = A.size();
    if(n == 1) return A[0];
    vector <int> l (n, 0);
    vector <int> r (n, 0);
    stack <pair<int, int>> s;
    for(int i = 0; i < n; i++) {
        int k = A[i];
        if(i == 0) {
            l[i] = -1;
        } else {
            if(!s.empty() && s.top().first >= k) {
                while(!s.empty() && k <= s.top().first) {
                    s.pop();
                }
            }
            if(s.empty()) {
                l[i] = -1;
            } else {
                l[i] = s.top().second;
            }
        }
        s.push(make_pair(k, i));
    }
    while(!s.empty()) s.pop();
    for(int i = n - 1; i >= 0; i--) {
          int k = A[i];
        if(i == n - 1) {
            r[i] = n;
        } else {
            if(!s.empty() && s.top().first >= k) {
                while(!s.empty() && k <= s.top().first) {
                    s.pop();
                }
            }
            if(s.empty()) {
                r[i] = n;
            } else {
                r[i] = s.top().second;
            }
        }
        s.push(make_pair(k, i));
    }
    int res = INT_MIN;
    int ind;
    for(int i = 0; i < n; i++) {
        r[i] = (r[i] - l[i] - 1) * A[i];
        res = max(r[i], res);
    }
    return res;
}
