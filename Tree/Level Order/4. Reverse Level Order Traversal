//Question https://leetcode.com/problems/binary-tree-level-order-traversal-ii/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector <vector <int>> r;
        if(!root) return r;
        stack <vector<int>> sc;
        queue <TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<int> s;
        while(!q.empty()) {
            TreeNode* t = q.front();
            q.pop();
            if(t == NULL) {
                sc.push(s);       
                s.resize(0);
                    if(!q.empty()) {
                        q.push(NULL);
                    }
            } else {
                s.push_back(t->val);
                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
                
            }
        }
        while(!sc.empty()) {
            r.push_back(sc.top());
            sc.pop();
        }
        return r;
    }
};
