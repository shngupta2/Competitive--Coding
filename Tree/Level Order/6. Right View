// Question https://leetcode.com/problems/binary-tree-right-side-view/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector <int> r;
        if(!root) return r;
        queue <TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector <int> s;
        while(!q.empty()) {
            TreeNode* t = q.front();
            q.pop();
            if(t == NULL) {
                int n = s.size() - 1;
                r.push_back(s[n]);
                s.resize(0);
                if(!q.empty()) {
                    q.push(NULL);
                }
            } else {
                s.push_back(t->val);
                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
            }
         }
        return r;
    }
};
