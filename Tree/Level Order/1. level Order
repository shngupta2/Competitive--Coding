// Question https://leetcode.com/problems/binary-tree-level-order-traversal/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector <vector <int>> r;
        if(!root) return r;
        queue <TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector <int> s;
        while(!q.empty()) {
           TreeNode* temp = q.front();
            q.pop();
            if(temp == NULL) {
                r.push_back(s);
                s.resize(0);
                if(!q.empty()) {
                    q.push(NULL);
                }
            }
                else {
                    s.push_back(temp->val);
                    if(temp->left) q.push(temp->left);
                    
                    if(temp->right) q.push(temp->right);
                }
            }
        return r;
    }
};
