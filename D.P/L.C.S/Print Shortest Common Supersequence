//question https://leetcode.com/problems/shortest-common-supersequence/
//video 

class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int m = str1.size();
        int n = str2.size();
        if(m == 0) return str2;
        else if(n == 0) return str1;
        string s = "";
        vector <vector <int>> t (m + 1, vector <int> (n + 1));
        for(int i = 1; i < m + 1; i++) {
            for(int j = 1; j < n + 1; j++) {
                    if(str1[i - 1] == str2[j - 1]) {
                    t[i][j] = 1 + t[i - 1][j - 1];
                }
                else {
                    t[i][j] = max(t[i - 1][j], t[i][j - 1]);
                }
            }
        }
        if(t[m][n] == 0) {
            s += str1;
            s += str2;
            return s;
        }

        int i = m;
        int j = n;
        while(i || j) {
            if(i == 0) {
                s += str2[j - 1];
                j--;
            }
            else if(j == 0) {
                s += str1[i - 1];
                i--;
            }
            else if(str1[i - 1] == str2[j - 1]) {
                s += str1[i - 1];
                i--;
                j--;
            }
            else if(t[i - 1][j] == t[i][j]) {
                    s += str1[i - 1];
                    i--;
            }
            
            else if(t[i][j - 1] == t[i][j]) {
                    s += str2[j - 1];
                    j--;
            }
        }
        reverse(s.begin(), s.end());
        return s;
    }
};
